1.
 SSH connection through host in the middle

Unreachable_host is unavailable from local network, but it's available from reachable_host's network. This command creates a connection to unreachable_host through "hidden" connection to reachable_host.


ssh -t reachable_host ssh unreachable_host


2.
ssh -t hostA ssh hostB

directly ssh to host B that is only accessible through host A

Of course you need to be able to access host A for this ;-)


3.

cat ~/.ssh/id_rsa.pub | ssh user@machine "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"
Copy your ssh public key to a server from a machine that doesn't have ssh-copy-id

4.

ssh -t remote_host screen -r
Attach screen over ssh

5.

ssh -t user@some.domain.com /usr/bin/screen -xRR

How to establish a remote Gnu screen session that you can re-connect to

Long before tabbed terminals existed, people have been using Gnu screen to open many shells in a single text terminal. Combined with ssh, it gives you the ability to have many open shells with a single remote connection using the above options. If you detach with "Ctrl-a d" or if the ssh session is accidentally terminated, all processes running in your remote shells remain undisturbed, ready for you to reconnect. Other useful screen commands are "Ctrl-a c" (open new shell) and "Ctrl-a a" (alternate between shells). Read this quick reference for more screen commands: http://aperiodic.net/screen/quick_reference





