
https://access.redhat.com/solutions/979643

    Goal: a Red Hat Enterprise Linux 7 system that requires manual entry of a bootloader password in order to boot any future kernels

    Adding users and custom menuentry .... --user SOMEUSER directives to /etc/grub.d/40_custom per the the RHEL7 System Administrator's Guide is great, but how can you configure grub so that ALL existing & future kernels require a password in order to boot?

Medio Ambiente

    Red Hat Enterprise Linux 7
    GRUB 2 bootloader

ResoluciÃ³n

1.    Edit /etc/grub.d/10_linux, changing the line like the following:

    CLASS="--class gnu-linux --class gnu --class os --unrestricted"

    to a line exactly like the following:

    CLASS="--class gnu-linux --class gnu --class os --users '' "

    This could be done with a simple sed command, e.g., by running the following from a root shell:

    sed -i "/^CLASS=/s/unrestricted/users '' /" /etc/grub.d/10_linux

2.    Add a user to /etc/grub.d/40_custom as described in RHEL7 System Administrator's Guide, e.g., by running the following from a root shell:

    cat >>/etc/grub.d/40_custom <<\EOF
    set superusers="bob"
    password bob bobpassword
    EOF

3.    Recreate /boot/grub2/grub.cfg by running the following from a root shell:

    grub2-mkconfig -o /boot/grub2/grub.cfg

All defined menuentrys will now be un-bootable until the user and password are entered as (e.g.) bob and bobpassword
TO BE EXPLICIT: henceforth, the system will not boot any standard RHEL7 kernel without direct user intervention, and this user intervention will have to be done at the console, so console access will also be required at boot time.

 
NOTE: To prevent users from modifying all grub menuentrys (and to prevent users from entering the grub command line), it is sufficient to simply add a new superuser to /etc/grub.d/40_custom -- e.g., perform ONLY step 2 & step 3 above
grub2-mkpasswd-pbkdf2
set superusers="joe"
password_pbkdf2 joe .........hash.......
